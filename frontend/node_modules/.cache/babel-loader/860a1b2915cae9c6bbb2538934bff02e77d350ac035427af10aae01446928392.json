{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Container,Typography,Paper,Box,Button,Alert,CircularProgress,Grid,Card,CardContent,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Chip,Select,MenuItem,FormControl,InputLabel,Divider,LinearProgress}from'@mui/material';import{Upload,Download,Analytics,Info}from'@mui/icons-material';import{styled}from'@mui/material/styles';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL='http://localhost:8000';const StyledPaper=styled(Paper)(_ref=>{let{theme}=_ref;return{padding:theme.spacing(3),marginBottom:theme.spacing(3)};});const FileUploadArea=styled(Box)(_ref2=>{let{theme}=_ref2;return{border:\"2px dashed \".concat(theme.palette.primary.main),borderRadius:theme.shape.borderRadius,padding:theme.spacing(4),textAlign:'center',cursor:'pointer',transition:'all 0.3s ease','&:hover':{backgroundColor:theme.palette.action.hover,borderColor:theme.palette.primary.dark}};});const MetricCard=styled(Card)(_ref3=>{let{theme}=_ref3;return{textAlign:'center',padding:theme.spacing(2),height:'100%'};});function App(){const[modelInfo,setModelInfo]=useState(null);const[featureImportance,setFeatureImportance]=useState([]);const[selectedFile,setSelectedFile]=useState(null);const[predictions,setPredictions]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[filter,setFilter]=useState('All');const[healthStatus,setHealthStatus]=useState('checking');useEffect(()=>{checkHealth();fetchModelInfo();fetchFeatureImportance();},[]);const checkHealth=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/health\"));setHealthStatus(response.data.model_loaded?'healthy':'unhealthy');}catch(error){setHealthStatus('unhealthy');}};const fetchModelInfo=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/model-info\"));setModelInfo(response.data);}catch(error){console.error('Error fetching model info:',error);}};const fetchFeatureImportance=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/feature-importance\"));setFeatureImportance(response.data.feature_importance);}catch(error){console.error('Error fetching feature importance:',error);}};const handleFileSelect=event=>{const file=event.target.files[0];if(file&&file.type==='text/csv'){setSelectedFile(file);setError('');}else{setError('Please select a valid CSV file');setSelectedFile(null);}};const handlePredict=async()=>{if(!selectedFile){setError('Please select a file first');return;}setLoading(true);setError('');const formData=new FormData();formData.append('file',selectedFile);try{const response=await axios.post(\"\".concat(API_BASE_URL,\"/predict\"),formData,{headers:{'Content-Type':'multipart/form-data'}});if(response.data.success){setPredictions(response.data.data);}else{setError('Prediction failed');}}catch(error){var _error$response,_error$response$data;setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Error during prediction');}finally{setLoading(false);}};const handleDownload=()=>{if(!(predictions!==null&&predictions!==void 0&&predictions.predictions))return;const csvContent=convertToCSV(predictions.predictions);const blob=new Blob([csvContent],{type:'text/csv'});const url=window.URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='anomaly_detection_results.csv';document.body.appendChild(a);a.click();document.body.removeChild(a);window.URL.revokeObjectURL(url);};const convertToCSV=data=>{if(!data||data.length===0)return'';const headers=Object.keys(data[0]);const csvHeaders=headers.join(',');const csvRows=data.map(row=>headers.map(header=>{const value=row[header];return typeof value==='string'?\"\\\"\".concat(value,\"\\\"\"):value;}).join(','));return[csvHeaders,...csvRows].join('\\n');};const getFilteredPredictions=()=>{if(!(predictions!==null&&predictions!==void 0&&predictions.predictions)||filter==='All'){return(predictions===null||predictions===void 0?void 0:predictions.predictions)||[];}return predictions.predictions.filter(item=>item.prediction===filter);};const getStatusColor=status=>{switch(status){case'healthy':return'success';case'unhealthy':return'error';default:return'warning';}};const getPredictionColor=prediction=>{return prediction&&prediction.toLowerCase().includes('normal')?'success':'error';};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"xl\",sx:{py:4},children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:4,textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h3\",component:\"h1\",gutterBottom:true,children:\"\\uD83D\\uDD0D Smart System Anomaly Detection\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"text.secondary\",children:\"Upload your CSV file to detect anomalies in smart system data\"}),/*#__PURE__*/_jsx(Chip,{label:\"Status: \".concat(healthStatus),color:getStatusColor(healthStatus),sx:{mt:2}})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:featureImportance.length>0&&/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[/*#__PURE__*/_jsx(Analytics,{sx:{mr:1,verticalAlign:'middle'}}),\"Top Feature Importance\"]}),/*#__PURE__*/_jsx(Box,{sx:{maxHeight:300,overflow:'auto'},children:featureImportance.map((item,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:1},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',mb:0.5},children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:item.feature}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:item.importance.toFixed(4)})]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:item.importance/Math.max(...featureImportance.map(f=>f.importance))*100,sx:{height:4,borderRadius:2}})]},index))})]})}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:8,children:[/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"\\uD83D\\uDCC2 Upload CSV File\"}),/*#__PURE__*/_jsx(\"input\",{accept:\".csv\",style:{display:'none'},id:\"file-upload\",type:\"file\",onChange:handleFileSelect}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",children:/*#__PURE__*/_jsxs(FileUploadArea,{children:[/*#__PURE__*/_jsx(Upload,{sx:{fontSize:48,color:'primary.main',mb:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:selectedFile?selectedFile.name:'Click to upload CSV file'}),/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:selectedFile?\"Size: \".concat((selectedFile.size/1024).toFixed(1),\" KB\"):'Select a CSV file to analyze'})]})}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2,display:'flex',gap:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:handlePredict,disabled:!selectedFile||loading,startIcon:loading?/*#__PURE__*/_jsx(CircularProgress,{size:20}):/*#__PURE__*/_jsx(Analytics,{}),children:loading?'Analyzing...':'Detect Anomalies'}),predictions&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:handleDownload,startIcon:/*#__PURE__*/_jsx(Download,{}),children:\"Download Results\"})]}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error})]}),predictions&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"\\uD83C\\uDFAF Prediction Results\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:predictions.prediction_stats.map((stat,index)=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(MetricCard,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",color:getPredictionColor(stat.class),children:stat.count}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:stat.class}),/*#__PURE__*/_jsx(Chip,{label:\"\".concat(stat.percentage,\"%\"),color:getPredictionColor(stat.class),variant:\"outlined\"})]})})},index))}),/*#__PURE__*/_jsxs(Box,{sx:{mt:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"Confidence Statistics:\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Mean: \",predictions.confidence_distribution.mean.toFixed(3)]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Std: \",predictions.confidence_distribution.std.toFixed(3)]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Min: \",predictions.confidence_distribution.min.toFixed(3)]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:3,children:/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Max: \",predictions.confidence_distribution.max.toFixed(3)]})})]})]})]}),/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',justifyContent:'space-between',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"\\uD83D\\uDCCA Detailed Results\"}),/*#__PURE__*/_jsxs(FormControl,{sx:{minWidth:150},children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Filter by prediction\"}),/*#__PURE__*/_jsxs(Select,{value:filter,label:\"Filter by prediction\",onChange:e=>setFilter(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"All\",children:\"All\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Anomaly_DoS\",children:\"Anomaly_DoS\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Anomaly_Spoofing\",children:\"Anomaly_Probe\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"Anomaly_Injection\",children:\"Anomaly_R2L\"}),modelInfo===null||modelInfo===void 0?void 0:modelInfo.classes.map(cls=>/*#__PURE__*/_jsx(MenuItem,{value:cls,children:cls},cls))]})]})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{mb:2},children:[\"Showing \",getFilteredPredictions().length,\" / \",predictions.total_records,\" records\"]}),/*#__PURE__*/_jsx(TableContainer,{sx:{maxHeight:600},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsx(TableRow,{children:predictions.predictions.length>0&&Object.keys(predictions.predictions[0]).map(key=>/*#__PURE__*/_jsx(TableCell,{sx:{fontWeight:'bold'},children:key.charAt(0).toUpperCase()+key.slice(1)},key))})}),/*#__PURE__*/_jsx(TableBody,{children:getFilteredPredictions().slice(0,100).map((row,index)=>/*#__PURE__*/_jsx(TableRow,{hover:true,children:Object.entries(row).map(_ref4=>{let[key,value]=_ref4;return/*#__PURE__*/_jsx(TableCell,{children:key==='prediction'?/*#__PURE__*/_jsx(Chip,{label:value,color:getPredictionColor(value),size:\"small\"}):key==='confidence'?/*#__PURE__*/_jsxs(Box,{children:[typeof value==='number'?value.toFixed(3):value,/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:typeof value==='number'?value*100:0,sx:{mt:0.5,height:4}})]}):typeof value==='number'?value.toFixed(3):value},key);})},index))})]})}),getFilteredPredictions().length>100&&/*#__PURE__*/_jsx(Alert,{severity:\"info\",sx:{mt:2},children:\"Showing first 100 records. Download the full results using the Download button.\"})]})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","Paper","Box","Button","Alert","CircularProgress","Grid","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Select","MenuItem","FormControl","InputLabel","Divider","LinearProgress","Upload","Download","Analytics","Info","styled","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","StyledPaper","_ref","theme","padding","spacing","marginBottom","FileUploadArea","_ref2","border","concat","palette","primary","main","borderRadius","shape","textAlign","cursor","transition","backgroundColor","action","hover","borderColor","dark","MetricCard","_ref3","height","App","modelInfo","setModelInfo","featureImportance","setFeatureImportance","selectedFile","setSelectedFile","predictions","setPredictions","loading","setLoading","error","setError","filter","setFilter","healthStatus","setHealthStatus","checkHealth","fetchModelInfo","fetchFeatureImportance","response","get","data","model_loaded","console","feature_importance","handleFileSelect","event","file","target","files","type","handlePredict","formData","FormData","append","post","headers","success","_error$response","_error$response$data","detail","handleDownload","csvContent","convertToCSV","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","length","Object","keys","csvHeaders","join","csvRows","map","row","header","value","getFilteredPredictions","item","prediction","getStatusColor","status","getPredictionColor","toLowerCase","includes","maxWidth","sx","py","children","mb","variant","component","gutterBottom","color","label","mt","container","xs","md","mr","verticalAlign","maxHeight","overflow","index","display","justifyContent","feature","importance","toFixed","Math","max","f","accept","style","id","onChange","htmlFor","fontSize","name","size","gap","onClick","disabled","startIcon","severity","prediction_stats","stat","sm","class","count","percentage","confidence_distribution","mean","std","min","alignItems","minWidth","e","classes","cls","total_records","stickyHeader","key","fontWeight","charAt","toUpperCase","slice","entries","_ref4"],"sources":["C:/Users/ib116126/Downloads/Anamoly_detection_with react/Anamoly_detection_with react new/frontend/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Divider,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport { Upload, Download, Analytics, Info } from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  marginBottom: theme.spacing(3),\r\n}));\r\n\r\nconst FileUploadArea = styled(Box)(({ theme }) => ({\r\n  border: `2px dashed ${theme.palette.primary.main}`,\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n    borderColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nconst MetricCard = styled(Card)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  padding: theme.spacing(2),\r\n  height: '100%',\r\n}));\r\n\r\nfunction App() {\r\n  const [modelInfo, setModelInfo] = useState(null);\r\n  const [featureImportance, setFeatureImportance] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [predictions, setPredictions] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('All');\r\n  const [healthStatus, setHealthStatus] = useState('checking');\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n    fetchModelInfo();\r\n    fetchFeatureImportance();\r\n  }, []);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/health`);\r\n      setHealthStatus(response.data.model_loaded ? 'healthy' : 'unhealthy');\r\n    } catch (error) {\r\n      setHealthStatus('unhealthy');\r\n    }\r\n  };\r\n\r\n  const fetchModelInfo = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/model-info`);\r\n      setModelInfo(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching model info:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFeatureImportance = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/feature-importance`);\r\n      setFeatureImportance(response.data.feature_importance);\r\n    } catch (error) {\r\n      console.error('Error fetching feature importance:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === 'text/csv') {\r\n      setSelectedFile(file);\r\n      setError('');\r\n    } else {\r\n      setError('Please select a valid CSV file');\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/predict`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setPredictions(response.data.data);\r\n      } else {\r\n        setError('Prediction failed');\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.detail || 'Error during prediction');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!predictions?.predictions) return;\r\n\r\n    const csvContent = convertToCSV(predictions.predictions);\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'anomaly_detection_results.csv';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const convertToCSV = (data) => {\r\n    if (!data || data.length === 0) return '';\r\n    \r\n    const headers = Object.keys(data[0]);\r\n    const csvHeaders = headers.join(',');\r\n    const csvRows = data.map(row => \r\n      headers.map(header => {\r\n        const value = row[header];\r\n        return typeof value === 'string' ? `\"${value}\"` : value;\r\n      }).join(',')\r\n    );\r\n    \r\n    return [csvHeaders, ...csvRows].join('\\n');\r\n  };\r\n\r\n  const getFilteredPredictions = () => {\r\n    if (!predictions?.predictions || filter === 'All') {\r\n      return predictions?.predictions || [];\r\n    }\r\n    return predictions.predictions.filter(item => item.prediction === filter);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'healthy': return 'success';\r\n      case 'unhealthy': return 'error';\r\n      default: return 'warning';\r\n    }\r\n  };\r\n\r\n  const getPredictionColor = (prediction) => {\r\n    return prediction && prediction.toLowerCase().includes('normal') ? 'success' : 'error';\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n      {/* Header */}\r\n      <Box sx={{ mb: 4, textAlign: 'center' }}>\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n          🔍 Smart System Anomaly Detection\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Upload your CSV file to detect anomalies in smart system data\r\n        </Typography>\r\n        <Chip \r\n          label={`Status: ${healthStatus}`} \r\n          color={getStatusColor(healthStatus)}\r\n          sx={{ mt: 2 }}\r\n        />\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Left Column - Model Info */}\r\n        <Grid item xs={12} md={4}>\r\n          \r\n\r\n          {/* Feature Importance */}\r\n          {featureImportance.length > 0 && (\r\n            <StyledPaper>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                <Analytics sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Top Feature Importance\r\n              </Typography>\r\n              <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n                {featureImportance.map((item, index) => (\r\n                  <Box key={index} sx={{ mb: 1 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                      <Typography variant=\"body2\">{item.feature}</Typography>\r\n                      <Typography variant=\"body2\">{item.importance.toFixed(4)}</Typography>\r\n                    </Box>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={(item.importance / Math.max(...featureImportance.map(f => f.importance))) * 100}\r\n                      sx={{ height: 4, borderRadius: 2 }}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </StyledPaper>\r\n          )}\r\n        </Grid>\r\n\r\n        {/* Right Column - File Upload and Results */}\r\n        <Grid item xs={12} md={8}>\r\n          {/* File Upload */}\r\n          <StyledPaper>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              📂 Upload CSV File\r\n            </Typography>\r\n            \r\n            <input\r\n              accept=\".csv\"\r\n              style={{ display: 'none' }}\r\n              id=\"file-upload\"\r\n              type=\"file\"\r\n              onChange={handleFileSelect}\r\n            />\r\n            <label htmlFor=\"file-upload\">\r\n              <FileUploadArea>\r\n                <Upload sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {selectedFile ? selectedFile.name : 'Click to upload CSV file'}\r\n                </Typography>\r\n                <Typography color=\"text.secondary\">\r\n                  {selectedFile ? `Size: ${(selectedFile.size / 1024).toFixed(1)} KB` : 'Select a CSV file to analyze'}\r\n                </Typography>\r\n              </FileUploadArea>\r\n            </label>\r\n\r\n            <Box sx={{ mt: 2, display: 'flex', gap: 2 }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handlePredict}\r\n                disabled={!selectedFile || loading}\r\n                startIcon={loading ? <CircularProgress size={20} /> : <Analytics />}\r\n              >\r\n                {loading ? 'Analyzing...' : 'Detect Anomalies'}\r\n              </Button>\r\n              \r\n              {predictions && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={handleDownload}\r\n                  startIcon={<Download />}\r\n                >\r\n                  Download Results\r\n                </Button>\r\n              )}\r\n            </Box>\r\n\r\n            {error && (\r\n              <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                {error}\r\n              </Alert>\r\n            )}\r\n          </StyledPaper>\r\n\r\n          {/* Results */}\r\n          {predictions && (\r\n            <>\r\n              {/* Statistics Cards */}\r\n              <StyledPaper>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  🎯 Prediction Results\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  {predictions.prediction_stats.map((stat, index) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={index}>\r\n                      <MetricCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h4\" color={getPredictionColor(stat.class)}>\r\n                            {stat.count}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {stat.class}\r\n                          </Typography>\r\n                          <Chip \r\n                            label={`${stat.percentage}%`} \r\n                            color={getPredictionColor(stat.class)}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </CardContent>\r\n                      </MetricCard>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {/* Confidence Stats */}\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>Confidence Statistics:</Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Mean: {predictions.confidence_distribution.mean.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Std: {predictions.confidence_distribution.std.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Min: {predictions.confidence_distribution.min.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Max: {predictions.confidence_distribution.max.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </StyledPaper>\r\n\r\n              {/* Detailed Results Table */}\r\n              <StyledPaper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"h6\">📊 Detailed Results</Typography>\r\n                  <FormControl sx={{ minWidth: 150 }}>\r\n                    <InputLabel>Filter by prediction</InputLabel>\r\n                    <Select\r\n                      value={filter}\r\n                      label=\"Filter by prediction\"\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"All\">All</MenuItem>\r\n                      <MenuItem value=\"Anomaly_DoS\">Anomaly_DoS</MenuItem>\r\n                      <MenuItem value=\"Anomaly_Spoofing\">Anomaly_Probe</MenuItem>\r\n                      <MenuItem value=\"Anomaly_Injection\">Anomaly_R2L</MenuItem>\r\n                      {modelInfo?.classes.map((cls) => (\r\n                        <MenuItem key={cls} value={cls}>{cls}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                  Showing {getFilteredPredictions().length} / {predictions.total_records} records\r\n                </Typography>\r\n\r\n                <TableContainer sx={{ maxHeight: 600 }}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {predictions.predictions.length > 0 && \r\n                          Object.keys(predictions.predictions[0]).map((key) => (\r\n                            <TableCell key={key} sx={{ fontWeight: 'bold' }}>\r\n                              {key.charAt(0).toUpperCase() + key.slice(1)}\r\n                            </TableCell>\r\n                          ))\r\n                        }\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {getFilteredPredictions().slice(0, 100).map((row, index) => (\r\n                        <TableRow key={index} hover>\r\n                          {Object.entries(row).map(([key, value]) => (\r\n                            <TableCell key={key}>\r\n                              {key === 'prediction' ? (\r\n                                <Chip \r\n                                  label={value} \r\n                                  color={getPredictionColor(value)}\r\n                                  size=\"small\"\r\n                                />\r\n                              ) : key === 'confidence' ? (\r\n                                <Box>\r\n                                  {typeof value === 'number' ? value.toFixed(3) : value}\r\n                                  <LinearProgress\r\n                                    variant=\"determinate\"\r\n                                    value={typeof value === 'number' ? value * 100 : 0}\r\n                                    sx={{ mt: 0.5, height: 4 }}\r\n                                  />\r\n                                </Box>\r\n                              ) : (\r\n                                typeof value === 'number' ? value.toFixed(3) : value\r\n                              )}\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {getFilteredPredictions().length > 100 && (\r\n                  <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n                    Showing first 100 records. Download the full results using the Download button.\r\n                  </Alert>\r\n                )}\r\n              </StyledPaper>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}