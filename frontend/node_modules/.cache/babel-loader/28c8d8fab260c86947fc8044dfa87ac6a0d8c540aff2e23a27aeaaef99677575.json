{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ib116126\\\\Downloads\\\\Anamoly_detection_with react\\\\Anamoly_detection_with react new\\\\frontend\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Paper, Box, Button, Alert, CircularProgress, Grid, Card, CardContent, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Chip, Select, MenuItem, FormControl, InputLabel, Divider, LinearProgress } from '@mui/material';\nimport { Upload, Download, Analytics, Info } from '@mui/icons-material';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  marginBottom: theme.spacing(3)\n}));\n_c = StyledPaper;\nconst FileUploadArea = styled(Box)(({\n  theme\n}) => ({\n  border: `2px dashed ${theme.palette.primary.main}`,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  cursor: 'pointer',\n  transition: 'all 0.3s ease',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n    borderColor: theme.palette.primary.dark\n  }\n}));\n_c2 = FileUploadArea;\nconst MetricCard = styled(Card)(({\n  theme\n}) => ({\n  textAlign: 'center',\n  padding: theme.spacing(2),\n  height: '100%'\n}));\n_c3 = MetricCard;\nfunction App() {\n  _s();\n  const [modelInfo, setModelInfo] = useState(null);\n  const [featureImportance, setFeatureImportance] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [predictions, setPredictions] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState('All');\n  const [healthStatus, setHealthStatus] = useState('checking');\n  useEffect(() => {\n    checkHealth();\n    fetchModelInfo();\n    fetchFeatureImportance();\n  }, []);\n  const checkHealth = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/health`);\n      setHealthStatus(response.data.model_loaded ? 'healthy' : 'unhealthy');\n    } catch (error) {\n      setHealthStatus('unhealthy');\n    }\n  };\n  const fetchModelInfo = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/model-info`);\n      setModelInfo(response.data);\n    } catch (error) {\n      console.error('Error fetching model info:', error);\n    }\n  };\n  const fetchFeatureImportance = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/feature-importance`);\n      setFeatureImportance(response.data.feature_importance);\n    } catch (error) {\n      console.error('Error fetching feature importance:', error);\n    }\n  };\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (file && file.type === 'text/csv') {\n      setSelectedFile(file);\n      setError('');\n    } else {\n      setError('Please select a valid CSV file');\n      setSelectedFile(null);\n    }\n  };\n  const handlePredict = async () => {\n    if (!selectedFile) {\n      setError('Please select a file first');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/predict`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.data.success) {\n        setPredictions(response.data.data);\n      } else {\n        setError('Prediction failed');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Error during prediction');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!(predictions !== null && predictions !== void 0 && predictions.predictions)) return;\n    const csvContent = convertToCSV(predictions.predictions);\n    const blob = new Blob([csvContent], {\n      type: 'text/csv'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'anomaly_detection_results.csv';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  };\n  const convertToCSV = data => {\n    if (!data || data.length === 0) return '';\n    const headers = Object.keys(data[0]);\n    const csvHeaders = headers.join(',');\n    const csvRows = data.map(row => headers.map(header => {\n      const value = row[header];\n      return typeof value === 'string' ? `\"${value}\"` : value;\n    }).join(','));\n    return [csvHeaders, ...csvRows].join('\\n');\n  };\n  const getFilteredPredictions = () => {\n    if (!(predictions !== null && predictions !== void 0 && predictions.predictions) || filter === 'All') {\n      return (predictions === null || predictions === void 0 ? void 0 : predictions.predictions) || [];\n    }\n    return predictions.predictions.filter(item => item.prediction === filter);\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'healthy':\n        return 'success';\n      case 'unhealthy':\n        return 'error';\n      default:\n        return 'warning';\n    }\n  };\n  const getPredictionColor = prediction => {\n    return prediction && prediction.toLowerCase().includes('normal') ? 'success' : 'error';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"\\uD83D\\uDD0D Smart System Anomaly Detection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: \"text.secondary\",\n        children: \"Upload your CSV file to detect anomalies in smart system data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Status: ${healthStatus}`,\n        color: getStatusColor(healthStatus),\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: featureImportance.length > 0 && /*#__PURE__*/_jsxDEV(StyledPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [/*#__PURE__*/_jsxDEV(Analytics, {\n              sx: {\n                mr: 1,\n                verticalAlign: 'middle'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), \"Top Feature Importance\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              maxHeight: 300,\n              overflow: 'auto'\n            },\n            children: featureImportance.map((item, index) => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: item.feature\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: item.importance.toFixed(4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: item.importance / Math.max(...featureImportance.map(f => f.importance)) * 100,\n                sx: {\n                  height: 4,\n                  borderRadius: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(StyledPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"\\uD83D\\uDCC2 Upload CSV File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \".csv\",\n            style: {\n              display: 'none'\n            },\n            id: \"file-upload\",\n            type: \"file\",\n            onChange: handleFileSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(FileUploadArea, {\n              children: [/*#__PURE__*/_jsxDEV(Upload, {\n                sx: {\n                  fontSize: 48,\n                  color: 'primary.main',\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: selectedFile ? selectedFile.name : 'Click to upload CSV file'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"text.secondary\",\n                children: selectedFile ? `Size: ${(selectedFile.size / 1024).toFixed(1)} KB` : 'Select a CSV file to analyze'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handlePredict,\n              disabled: !selectedFile || loading,\n              startIcon: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 38\n              }, this) : /*#__PURE__*/_jsxDEV(Analytics, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 71\n              }, this),\n              children: loading ? 'Analyzing...' : 'Detect Anomalies'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), predictions && /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleDownload,\n              startIcon: /*#__PURE__*/_jsxDEV(Download, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 30\n              }, this),\n              children: \"Download Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mt: 2\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), predictions && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"\\uD83C\\uDFAF Prediction Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: predictions.prediction_stats.map((stat, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(MetricCard, {\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h4\",\n                      color: getPredictionColor(stat.class),\n                      children: stat.count\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      children: stat.class\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `${stat.percentage}%`,\n                      color: getPredictionColor(stat.class),\n                      variant: \"outlined\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Confidence Statistics:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Mean: \", predictions.confidence_distribution.mean.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Std: \", predictions.confidence_distribution.std.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Min: \", predictions.confidence_distribution.min.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 3,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: [\"Max: \", predictions.confidence_distribution.max.toFixed(3)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"\\uD83D\\uDCCA Detailed Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  minWidth: 150\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Filter by prediction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: filter,\n                  label: \"Filter by prediction\",\n                  onChange: e => setFilter(e.target.value),\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"All\",\n                    children: \"All\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 23\n                  }, this), modelInfo === null || modelInfo === void 0 ? void 0 : modelInfo.classes.map(cls => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: cls,\n                    children: cls\n                  }, cls, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2\n              },\n              children: [\"Showing \", getFilteredPredictions().length, \" / \", predictions.total_records, \" records\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              sx: {\n                maxHeight: 600\n              },\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: predictions.predictions.length > 0 && Object.keys(predictions.predictions[0]).map(key => /*#__PURE__*/_jsxDEV(TableCell, {\n                      sx: {\n                        fontWeight: 'bold'\n                      },\n                      children: key.charAt(0).toUpperCase() + key.slice(1)\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 373,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 370,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: getFilteredPredictions().slice(0, 100).map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    children: Object.entries(row).map(([key, value]) => /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: key === 'prediction' ? /*#__PURE__*/_jsxDEV(Chip, {\n                        label: value,\n                        color: getPredictionColor(value),\n                        size: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 386,\n                        columnNumber: 33\n                      }, this) : key === 'confidence' ? /*#__PURE__*/_jsxDEV(Box, {\n                        children: [typeof value === 'number' ? value.toFixed(3) : value, /*#__PURE__*/_jsxDEV(LinearProgress, {\n                          variant: \"determinate\",\n                          value: typeof value === 'number' ? value * 100 : 0,\n                          sx: {\n                            mt: 0.5,\n                            height: 4\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 394,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 33\n                      }, this) : typeof value === 'number' ? value.toFixed(3) : value\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 384,\n                      columnNumber: 29\n                    }, this))\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), getFilteredPredictions().length > 100 && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mt: 2\n              },\n              children: \"Showing first 100 records. Download the full results using the Download button.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8fBnf1JAdgnNpXHZvsULQEiBJfU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"FileUploadArea\");\n$RefreshReg$(_c3, \"MetricCard\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","Paper","Box","Button","Alert","CircularProgress","Grid","Card","CardContent","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Chip","Select","MenuItem","FormControl","InputLabel","Divider","LinearProgress","Upload","Download","Analytics","Info","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","StyledPaper","theme","padding","spacing","marginBottom","_c","FileUploadArea","border","palette","primary","main","borderRadius","shape","textAlign","cursor","transition","backgroundColor","action","hover","borderColor","dark","_c2","MetricCard","height","_c3","App","_s","modelInfo","setModelInfo","featureImportance","setFeatureImportance","selectedFile","setSelectedFile","predictions","setPredictions","loading","setLoading","error","setError","filter","setFilter","healthStatus","setHealthStatus","checkHealth","fetchModelInfo","fetchFeatureImportance","response","get","data","model_loaded","console","feature_importance","handleFileSelect","event","file","target","files","type","handlePredict","formData","FormData","append","post","headers","success","_error$response","_error$response$data","detail","handleDownload","csvContent","convertToCSV","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","length","Object","keys","csvHeaders","join","csvRows","map","row","header","value","getFilteredPredictions","item","prediction","getStatusColor","status","getPredictionColor","toLowerCase","includes","maxWidth","sx","py","children","mb","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","label","mt","container","xs","md","mr","verticalAlign","maxHeight","overflow","index","display","justifyContent","feature","importance","toFixed","Math","max","f","accept","style","id","onChange","htmlFor","fontSize","name","size","gap","onClick","disabled","startIcon","severity","prediction_stats","stat","sm","class","count","percentage","confidence_distribution","mean","std","min","alignItems","minWidth","e","classes","cls","total_records","stickyHeader","key","fontWeight","charAt","toUpperCase","slice","entries","_c4","$RefreshReg$"],"sources":["C:/Users/ib116126/Downloads/Anamoly_detection_with react/Anamoly_detection_with react new/frontend/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Paper,\r\n  Box,\r\n  Button,\r\n  Alert,\r\n  CircularProgress,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Divider,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport { Upload, Download, Analytics, Info } from '@mui/icons-material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000';\r\n\r\nconst StyledPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  marginBottom: theme.spacing(3),\r\n}));\r\n\r\nconst FileUploadArea = styled(Box)(({ theme }) => ({\r\n  border: `2px dashed ${theme.palette.primary.main}`,\r\n  borderRadius: theme.shape.borderRadius,\r\n  padding: theme.spacing(4),\r\n  textAlign: 'center',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.3s ease',\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n    borderColor: theme.palette.primary.dark,\r\n  },\r\n}));\r\n\r\nconst MetricCard = styled(Card)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  padding: theme.spacing(2),\r\n  height: '100%',\r\n}));\r\n\r\nfunction App() {\r\n  const [modelInfo, setModelInfo] = useState(null);\r\n  const [featureImportance, setFeatureImportance] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [predictions, setPredictions] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [filter, setFilter] = useState('All');\r\n  const [healthStatus, setHealthStatus] = useState('checking');\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n    fetchModelInfo();\r\n    fetchFeatureImportance();\r\n  }, []);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/health`);\r\n      setHealthStatus(response.data.model_loaded ? 'healthy' : 'unhealthy');\r\n    } catch (error) {\r\n      setHealthStatus('unhealthy');\r\n    }\r\n  };\r\n\r\n  const fetchModelInfo = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/model-info`);\r\n      setModelInfo(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching model info:', error);\r\n    }\r\n  };\r\n\r\n  const fetchFeatureImportance = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/feature-importance`);\r\n      setFeatureImportance(response.data.feature_importance);\r\n    } catch (error) {\r\n      console.error('Error fetching feature importance:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type === 'text/csv') {\r\n      setSelectedFile(file);\r\n      setError('');\r\n    } else {\r\n      setError('Please select a valid CSV file');\r\n      setSelectedFile(null);\r\n    }\r\n  };\r\n\r\n  const handlePredict = async () => {\r\n    if (!selectedFile) {\r\n      setError('Please select a file first');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/predict`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setPredictions(response.data.data);\r\n      } else {\r\n        setError('Prediction failed');\r\n      }\r\n    } catch (error) {\r\n      setError(error.response?.data?.detail || 'Error during prediction');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!predictions?.predictions) return;\r\n\r\n    const csvContent = convertToCSV(predictions.predictions);\r\n    const blob = new Blob([csvContent], { type: 'text/csv' });\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'anomaly_detection_results.csv';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    window.URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const convertToCSV = (data) => {\r\n    if (!data || data.length === 0) return '';\r\n    \r\n    const headers = Object.keys(data[0]);\r\n    const csvHeaders = headers.join(',');\r\n    const csvRows = data.map(row => \r\n      headers.map(header => {\r\n        const value = row[header];\r\n        return typeof value === 'string' ? `\"${value}\"` : value;\r\n      }).join(',')\r\n    );\r\n    \r\n    return [csvHeaders, ...csvRows].join('\\n');\r\n  };\r\n\r\n  const getFilteredPredictions = () => {\r\n    if (!predictions?.predictions || filter === 'All') {\r\n      return predictions?.predictions || [];\r\n    }\r\n    return predictions.predictions.filter(item => item.prediction === filter);\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'healthy': return 'success';\r\n      case 'unhealthy': return 'error';\r\n      default: return 'warning';\r\n    }\r\n  };\r\n\r\n  const getPredictionColor = (prediction) => {\r\n    return prediction && prediction.toLowerCase().includes('normal') ? 'success' : 'error';\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ py: 4 }}>\r\n      {/* Header */}\r\n      <Box sx={{ mb: 4, textAlign: 'center' }}>\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom>\r\n          🔍 Smart System Anomaly Detection\r\n        </Typography>\r\n        <Typography variant=\"h6\" color=\"text.secondary\">\r\n          Upload your CSV file to detect anomalies in smart system data\r\n        </Typography>\r\n        <Chip \r\n          label={`Status: ${healthStatus}`} \r\n          color={getStatusColor(healthStatus)}\r\n          sx={{ mt: 2 }}\r\n        />\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Left Column - Model Info */}\r\n        <Grid item xs={12} md={4}>\r\n          \r\n\r\n          {/* Feature Importance */}\r\n          {featureImportance.length > 0 && (\r\n            <StyledPaper>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                <Analytics sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                Top Feature Importance\r\n              </Typography>\r\n              <Box sx={{ maxHeight: 300, overflow: 'auto' }}>\r\n                {featureImportance.map((item, index) => (\r\n                  <Box key={index} sx={{ mb: 1 }}>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 0.5 }}>\r\n                      <Typography variant=\"body2\">{item.feature}</Typography>\r\n                      <Typography variant=\"body2\">{item.importance.toFixed(4)}</Typography>\r\n                    </Box>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={(item.importance / Math.max(...featureImportance.map(f => f.importance))) * 100}\r\n                      sx={{ height: 4, borderRadius: 2 }}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </StyledPaper>\r\n          )}\r\n        </Grid>\r\n\r\n        {/* Right Column - File Upload and Results */}\r\n        <Grid item xs={12} md={8}>\r\n          {/* File Upload */}\r\n          <StyledPaper>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              📂 Upload CSV File\r\n            </Typography>\r\n            \r\n            <input\r\n              accept=\".csv\"\r\n              style={{ display: 'none' }}\r\n              id=\"file-upload\"\r\n              type=\"file\"\r\n              onChange={handleFileSelect}\r\n            />\r\n            <label htmlFor=\"file-upload\">\r\n              <FileUploadArea>\r\n                <Upload sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  {selectedFile ? selectedFile.name : 'Click to upload CSV file'}\r\n                </Typography>\r\n                <Typography color=\"text.secondary\">\r\n                  {selectedFile ? `Size: ${(selectedFile.size / 1024).toFixed(1)} KB` : 'Select a CSV file to analyze'}\r\n                </Typography>\r\n              </FileUploadArea>\r\n            </label>\r\n\r\n            <Box sx={{ mt: 2, display: 'flex', gap: 2 }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handlePredict}\r\n                disabled={!selectedFile || loading}\r\n                startIcon={loading ? <CircularProgress size={20} /> : <Analytics />}\r\n              >\r\n                {loading ? 'Analyzing...' : 'Detect Anomalies'}\r\n              </Button>\r\n              \r\n              {predictions && (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={handleDownload}\r\n                  startIcon={<Download />}\r\n                >\r\n                  Download Results\r\n                </Button>\r\n              )}\r\n            </Box>\r\n\r\n            {error && (\r\n              <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n                {error}\r\n              </Alert>\r\n            )}\r\n          </StyledPaper>\r\n\r\n          {/* Results */}\r\n          {predictions && (\r\n            <>\r\n              {/* Statistics Cards */}\r\n              <StyledPaper>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  🎯 Prediction Results\r\n                </Typography>\r\n                <Grid container spacing={2}>\r\n                  {predictions.prediction_stats.map((stat, index) => (\r\n                    <Grid item xs={12} sm={6} md={4} key={index}>\r\n                      <MetricCard>\r\n                        <CardContent>\r\n                          <Typography variant=\"h4\" color={getPredictionColor(stat.class)}>\r\n                            {stat.count}\r\n                          </Typography>\r\n                          <Typography variant=\"h6\" gutterBottom>\r\n                            {stat.class}\r\n                          </Typography>\r\n                          <Chip \r\n                            label={`${stat.percentage}%`} \r\n                            color={getPredictionColor(stat.class)}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </CardContent>\r\n                      </MetricCard>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n\r\n                {/* Confidence Stats */}\r\n                <Box sx={{ mt: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>Confidence Statistics:</Typography>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Mean: {predictions.confidence_distribution.mean.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Std: {predictions.confidence_distribution.std.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Min: {predictions.confidence_distribution.min.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <Typography variant=\"body2\">Max: {predictions.confidence_distribution.max.toFixed(3)}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </StyledPaper>\r\n\r\n              {/* Detailed Results Table */}\r\n              <StyledPaper>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"h6\">📊 Detailed Results</Typography>\r\n                  <FormControl sx={{ minWidth: 150 }}>\r\n                    <InputLabel>Filter by prediction</InputLabel>\r\n                    <Select\r\n                      value={filter}\r\n                      label=\"Filter by prediction\"\r\n                      onChange={(e) => setFilter(e.target.value)}\r\n                    >\r\n                      <MenuItem value=\"All\">All</MenuItem>\r\n                      {modelInfo?.classes.map((cls) => (\r\n                        <MenuItem key={cls} value={cls}>{cls}</MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                  Showing {getFilteredPredictions().length} / {predictions.total_records} records\r\n                </Typography>\r\n\r\n                <TableContainer sx={{ maxHeight: 600 }}>\r\n                  <Table stickyHeader>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        {predictions.predictions.length > 0 && \r\n                          Object.keys(predictions.predictions[0]).map((key) => (\r\n                            <TableCell key={key} sx={{ fontWeight: 'bold' }}>\r\n                              {key.charAt(0).toUpperCase() + key.slice(1)}\r\n                            </TableCell>\r\n                          ))\r\n                        }\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {getFilteredPredictions().slice(0, 100).map((row, index) => (\r\n                        <TableRow key={index} hover>\r\n                          {Object.entries(row).map(([key, value]) => (\r\n                            <TableCell key={key}>\r\n                              {key === 'prediction' ? (\r\n                                <Chip \r\n                                  label={value} \r\n                                  color={getPredictionColor(value)}\r\n                                  size=\"small\"\r\n                                />\r\n                              ) : key === 'confidence' ? (\r\n                                <Box>\r\n                                  {typeof value === 'number' ? value.toFixed(3) : value}\r\n                                  <LinearProgress\r\n                                    variant=\"determinate\"\r\n                                    value={typeof value === 'number' ? value * 100 : 0}\r\n                                    sx={{ mt: 0.5, height: 4 }}\r\n                                  />\r\n                                </Box>\r\n                              ) : (\r\n                                typeof value === 'number' ? value.toFixed(3) : value\r\n                              )}\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {getFilteredPredictions().length > 100 && (\r\n                  <Alert severity=\"info\" sx={{ mt: 2 }}>\r\n                    Showing first 100 records. Download the full results using the Download button.\r\n                  </Alert>\r\n                )}\r\n              </StyledPaper>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}